{"version":3,"file":"static/js/528.25ef6cb7.chunk.js","mappings":"8NACaA,EAAQC,EAAAA,GAAAA,MAAH,0DAKLC,EAAMD,EAAAA,GAAAA,OAAH,gP,SCEHE,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACvB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAmBA,OACI,+BACA,kBAAOH,SAfY,SAACI,GACpBA,EAAEC,iBAEuB,KAArBH,EAAUI,QAKdN,EAASE,GACTC,EAAa,KALTI,MAAM,sBAWV,WACI,SAACX,EAAD,CAAOY,KAAK,OACZC,MAAOP,EACPQ,SAtBa,SAACN,GAClBD,EAAaC,EAAEO,cAAcF,WAuBzB,SAACX,EAAD,CAAKU,KAAK,SAAV,0B,oCCWZ,EArCe,WACX,OAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCb,EAAAA,EAAAA,UAASY,EAAaE,IAAI,UAA9D,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BhB,EAAAA,EAAAA,UAAS,MAArC,eAAOiB,EAAP,KAAeC,EAAf,MAIAC,EAAAA,EAAAA,YAAU,WACDJ,GAILK,EAAAA,EAAAA,iBACsBL,GACjBM,MAAK,SAAAC,GACF,GAA2B,IAAvBA,EAAKC,cACL,OAAOjB,MAAM,iBAEjBY,EAAUI,EAAKE,cAGzB,CAACT,EAAWH,IAQd,OACI,UAAC,KAAD,YACI,SAACd,EAAD,CAAWC,SARM,SAAAgB,GACrBC,EAAcD,GACdF,EAAgB,CAACY,MAAMV,IACvBG,EAAU,SAMI,OAATD,IAAiB,SAACS,EAAA,EAAD,CAAWT,OAAQA","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const Input = styled.input`\n  outline:none;\n  height: 20px;\n`;\n\nexport const Btn = styled.button`\nborder-radius: 4px;\npadding: 4px 8px;\nmargin-left:8px;\ncolor:black;\nbackground-color:transparent;\nborder: 1px solid black;\n&:hover{\n    color:white;\nbackground-color:orangered;\nborder-color:transparent;\n}\n`","// import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Input, Btn } from \"./SearchBar.styled\";\n// import moviesAPI from 'services/movies';\n// import MovieList from \"./MovieList\";\n\n\nexport const SearchBar = ({onSubmit}) => {\n    const [movieName, setMovieName] = useState('');\n\n    const handleChange = (e) => {\n        setMovieName(e.currentTarget.value)\n    };\n\n      const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (movieName.trim() === '') {\n            alert('Please enter smth')\n            return;\n        }\n\n        onSubmit(movieName);\n        setMovieName('');\n    };\n\n\n    return (\n        <>\n        <form  onSubmit={handleSubmit}>\n            <Input type=\"text\"\n            value={movieName}\n            onChange={handleChange} \n            />\n            <Btn type='submit'>Search</ Btn>\n        </form>\n        \n            {/* {movies && <MovieList movies={movies}/>} */}\n        </>\n    )\n};\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import { SearchBar } from \"components/SearchBar/SearchBar\"\nimport { Container } from \"components/SharedLayout/SharedLayout.styled\"\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n// import { useLocation } from \"react-router-dom\";\nimport moviesAPI from 'services/movies';\nimport MovieList from \"../components/MovieList/MovieList\";\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [moviesName, setMoviesName] = useState(searchParams.get(\"query\"));\n    const [movies, setMovies] = useState(null);\n   \n    // console.log(searchParams)\n\n    useEffect(() => {\n        if (!moviesName ) {\n            return;\n        };\n        \n        moviesAPI\n            .fetchMovieSearch(moviesName)\n            .then(film => {\n                if (film.total_results === 0) {\n                    return alert('Nothing found')\n                }\n                setMovies(film.results)\n                return;\n            });\n    },[moviesName,searchParams]);\n\n    const handleFormSubmit = moviesName => {\n        setMoviesName(moviesName);\n        setSearchParams({query:moviesName});\n        setMovies(null);\n  };\n\n    return (\n        <Container>\n            <SearchBar onSubmit={handleFormSubmit} />\n            {movies!==null && <MovieList movies={movies}/>} \n        </Container>\n    )\n};\n\nexport default Movies;"],"names":["Input","styled","Btn","SearchBar","onSubmit","useState","movieName","setMovieName","e","preventDefault","trim","alert","type","value","onChange","currentTarget","useSearchParams","searchParams","setSearchParams","get","moviesName","setMoviesName","movies","setMovies","useEffect","moviesAPI","then","film","total_results","results","query","MovieList"],"sourceRoot":""}