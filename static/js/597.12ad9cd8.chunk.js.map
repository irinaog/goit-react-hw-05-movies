{"version":3,"file":"static/js/597.12ad9cd8.chunk.js","mappings":"8LAsCA,UAhCa,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACDF,GACDG,EAAAA,EAAAA,UACON,GACVO,MAAK,SAAAC,GACFJ,EAAQI,EAAOL,WAIrB,CAACA,EAAMH,KAKL,wBACKG,GAAOA,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACb,2BACI,gBAAKC,IAAG,0CAAqCD,GAAgBE,IAAKJ,KAClE,uBAAIA,KACJ,wCAAc,0BAAOC,SAHhBF","sources":["components/Cast.jsx"],"sourcesContent":["// import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesAPI from 'services/movies';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    \n    useEffect(() => {\n        if (!cast) {\n            moviesAPI\n        .fetchCast(movieId)\n        .then(inform => {\n            setCast(inform.cast)\n            return\n        })\n        } \n    },[cast, movieId])\n   \n\n    return (\n        \n        <ul>\n            {cast&& cast.map(({ cast_id, name, character, profile_path }) => (\n                <li key={cast_id}>\n                    <img src={`https://image.tmdb.org/t/p/w200/${profile_path}`} alt={name} />\n                    <p>{name}</p>\n                    <p>Character: <span>{character}</span></p>\n                </li>\n            ))}\n                \n        </ul>\n            \n    )\n};\n\nexport default Cast;\n\n// Cast.propTypes = {\n//     actors: PropTypes.arrayOf(PropTypes.shape({\n//         id: PropTypes.number.isRequired,\n//         name: PropTypes.string.isRequired,\n//         character: PropTypes.string.isRequired,\n//         profile_path:PropTypes.string,\n//     }))\n// }"],"names":["movieId","useParams","useState","cast","setCast","useEffect","moviesAPI","then","inform","map","cast_id","name","character","profile_path","src","alt"],"sourceRoot":""}