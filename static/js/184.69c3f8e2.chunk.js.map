{"version":3,"file":"static/js/184.69c3f8e2.chunk.js","mappings":"kPAGaA,EAAaC,EAAAA,GAAAA,GAAH,qIAOVC,EAAYD,EAAAA,GAAAA,GAAH,4DAGTE,EAAOF,EAAAA,GAAAA,EAAH,6D,SC0BjB,EAhCa,WACT,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACDF,GACDG,EAAAA,EAAAA,UACON,GACVO,MAAK,SAAAC,GACFJ,EAAQI,EAAOL,WAIrB,CAACA,EAAMH,KAKL,SAACJ,EAAD,UACKO,GAAOA,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACb,UAACf,EAAD,YACI,gBAAKgB,IAAG,0CAAqCD,GAAgBE,IAAKJ,KAClE,SAACZ,EAAD,UAAOY,KACP,UAACZ,EAAD,0BAAiB,0BAAOa,SAHZF","sources":["components/AdditionalInform/Cast.styled.js","components/AdditionalInform/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const ActorsList = styled.ul`\ndisplay:grid;\ngrid-template-columns: 200px 200px 200px;\nlist-style:none;\ngap:8px;\njustify-content:center;`\n\nexport const ActorItem = styled.li`\nbox-shadow: 0px 0px 8px 1px #8E8E8E;`\n\nexport const Text = styled.p`\n    text-align: center;\ncolor:black;`\n\n\n// export const ActorCard = styled.li`\n\n// `","// import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesAPI from 'services/movies';\nimport { ActorsList, ActorItem, Text } from './Cast.styled';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    \n    useEffect(() => {\n        if (!cast) {\n            moviesAPI\n        .fetchCast(movieId)\n        .then(inform => {\n            setCast(inform.cast)\n            return\n        })\n        } \n    },[cast, movieId])\n   \n\n    return (\n        \n        <ActorsList>\n            {cast&& cast.map(({ cast_id, name, character, profile_path }) => (\n                <ActorItem key={cast_id}>\n                    <img src={`https://image.tmdb.org/t/p/w200/${profile_path}`} alt={name} />\n                    <Text>{name}</Text>\n                    <Text>Character: <span>{character}</span></Text>\n                </ActorItem>\n            ))}\n                \n        </ActorsList>\n            \n    )\n};\n\nexport default Cast;\n\n// Cast.propTypes = {\n//     actors: PropTypes.arrayOf(PropTypes.shape({\n//         id: PropTypes.number.isRequired,\n//         name: PropTypes.string.isRequired,\n//         character: PropTypes.string.isRequired,\n//         profile_path:PropTypes.string,\n//     }))\n// }"],"names":["ActorsList","styled","ActorItem","Text","movieId","useParams","useState","cast","setCast","useEffect","moviesAPI","then","inform","map","cast_id","name","character","profile_path","src","alt"],"sourceRoot":""}