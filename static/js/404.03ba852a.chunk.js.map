{"version":3,"file":"static/js/404.03ba852a.chunk.js","mappings":"+OAGaA,GAAOC,E,MAAAA,IAAOC,EAAAA,GAAPD,CAAH,6M,SCGjB,EAJqB,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACpB,OAAQ,SAACH,EAAD,CAAMI,GAAID,EAAV,mB,kBCgEZ,EA5DqB,WAAO,IAAD,IACjBE,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAY,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAgB7C,OAdAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,kBACuBT,GAClBU,MAAK,SAAAC,GACkB,OAAhBR,GAGJC,EAAeO,QAGxB,CAACX,EAASG,KAKT,iCACI,UAAC,KAAD,YACI,SAAC,EAAD,CAAcP,SAAUS,IAE3BF,IAAe,4BACZ,gBAAKS,IAAKT,EAAYU,eAAgBC,IAAG,0CAAqCX,EAAYY,gBAC1F,wBAAKZ,EAAYU,kBACjB,wCAAiBV,EAAYa,iBAC7B,sCACA,uBAAIb,EAAYc,YAChB,oCACA,uBACKd,EAAYe,OAAOC,KAAI,SAAAC,GAAK,OACzB,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAME,gBAMjC,UAAC,KAAD,YACI,oDACA,UAAC,KAAD,YACI,SAAC,KAAD,WACI,SAAC,KAAD,CAAMzB,GAAG,OAAT,qBAEJ,SAAC,KAAD,WACI,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIR,SAAC,EAAA0B,SAAD,CAAUC,UAAU,yCAApB,UACI,SAAC,KAAD","sources":["components/BackLinkHref/BackLinkHref.styled.js","components/BackLinkHref/BackLinkHref.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Back = styled(Link)`\ntext-decoration: none; \ndisplay:block;\ncolor:white;\nmax-width:50px;\npadding: 4px 8px;\nbackground-color: #838383;\ntext-align: center;\nmargin-bottom:8px;\nborder-radius: 4px;\n`","import { Back } from \"./BackLinkHref.styled\";\n\nconst BackLinkHref = ({ backLink }) => {\n    return (<Back to={backLink}>Back</Back>)\n};\n\nexport default BackLinkHref;","import { Container } from \"components/SharedLayout/SharedLayout.styled\"\nimport { Suspense, useEffect,useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport BackLinkHref from \"components/BackLinkHref/BackLinkHref\";\nimport { List, Item, } from \"components/MovieList/MovieList.styled\";\nimport moviesAPI from 'services/movies';\n\nconst MovieDetails = () => {\n    const location = useLocation();\n    const { movieId } = useParams();\n    const [movieDetail, setMovieDetail] = useState(null);\n    const backLinkHref = location.state?.from ?? \"/movies\";\n\n    useEffect(() => {\n        moviesAPI\n            .fetchMoviedetails(movieId)\n            .then(movieInform => {\n                if (movieDetail !== null) {\n                    return\n                }\n                setMovieDetail(movieInform);\n                return\n            });\n    }, [movieId, movieDetail]);\n    \n  \n\n    return (\n        <>\n            <Container>\n                <BackLinkHref backLink={backLinkHref}/>\n                {/* <Link to={backLinkHref}>Back</Link> */}\n            {movieDetail && <div>\n                <img alt={movieDetail.original_title} src={`https://image.tmdb.org/t/p/w200/${movieDetail.poster_path}`} />\n                <h2>{movieDetail.original_title}</h2>\n                <p>User score: { movieDetail.vote_average}</p>\n                <h3>Overwiev</h3>\n                <p>{movieDetail.overview}</p>\n                <h3>Genres</h3>\n                <p>\n                    {movieDetail.genres.map(genre => (\n                        <span key={genre.id}>{genre.name} </span>\n                    ))}\n                </p>\n            </div>}\n        </Container>\n           \n        <Container>\n            <h2>Additional information</h2>\n            <List>\n                <Item>\n                    <Link to='cast'>Cast</Link>\n                </Item>\n                <Item>\n                    <Link to='reviews'>Reviews</Link>\n                </Item>\n            </List>\n            </Container>\n            <Suspense fallback={<div>Please wait</div>}>\n                <Outlet />\n            </Suspense>\n        </>\n        \n      \n    )\n};\n\nexport default MovieDetails;\n\n"],"names":["Back","styled","Link","backLink","to","location","useLocation","movieId","useParams","useState","movieDetail","setMovieDetail","backLinkHref","state","from","useEffect","moviesAPI","then","movieInform","alt","original_title","src","poster_path","vote_average","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}